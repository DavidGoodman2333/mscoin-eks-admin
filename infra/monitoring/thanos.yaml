apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 1m
  timeout: 5m
  chart:
    spec:
      chart: thanos
      version: "15.7.6"
      interval: 5m
      sourceRef:
        kind: HelmRepository
        name: bitnami
  values:
    objstoreConfig: |-
      type: s3
      config:
        bucket: "mscoin-prod-thanos"
        endpoint: s3.ap-east-1.amazonaws.com
        aws_sdk_auth: true
        region: "ap-east-1"
    query:
      replicaCount: 2
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodegroup
                    operator: In
                    values:
                      - "k8s-core"
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - ap-east-1a
                      - ap-east-1c
      resources:
        requests:
          cpu: 200m
          memory: 100Mi
        limits:
          cpu: 400m
          memory: 200Mi
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      serviceAccount:
        create: false
        name: tf-service-role-for-thanos
      ingress:
        enabled: true
        ingressClassName: nginx
        hostname: thanos-querier.prod.mscoin-data.com
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: "lets-encrypt"
    queryFrontend:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodegroup
                    operator: In
                    values:
                      - "k8s-core"
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - ap-east-1a
                      - ap-east-1c
      serviceAccount:
        create: false
        name: tf-service-role-for-thanos
      ingress:
        enabled: true
        ingressClassName: nginx
        hostname: thanos-query-frontend.prod.mscoin-data.com
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: "lets-encrypt"
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
        limits:
          cpu: 50m
          memory: 200Mi
    bucketweb:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodegroup
                    operator: In
                    values:
                      - "k8s-core"
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - ap-east-1a
                      - ap-east-1c
      serviceAccount:
        create: false
        name: tf-service-role-for-thanos
      enabled: true
      ingress:
        enabled: true
        ingressClassName: nginx
        hostname: thanos-bucket-web.prod.mscoin-data.com
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: "lets-encrypt"
      resources:
        requests:
          cpu: 10m
          memory: 200Mi
        limits:
          cpu: 50m
          memory: 400Mi
    compactor:
      persistence:
        storageClass: gp3
        size: 100Gi
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      nodeSelector:
        nodegroup: "k8s-core"
        topology.kubernetes.io/zone: "ap-east-1c"
      serviceAccount:
        create: false
        name: tf-service-role-for-thanos
      enabled: true
      ingress:
        enabled: true
        ingressClassName: nginx
        hostname: thanos-compactor.prod.mscoin-data.com
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: "lets-encrypt"
      resources:
        requests:
          cpu: 500m
          memory: 300Mi
        limits:
          cpu: 1000m
          memory: 600Mi


