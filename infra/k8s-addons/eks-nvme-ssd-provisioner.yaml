apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: kube-system
  name: eks-nvme-ssd-provisioner
  labels:
    app: eks-nvme-ssd-provisioner
spec:
  selector:
    matchLabels:
      name: eks-nvme-ssd-provisioner
  template:
    metadata:
      labels:
        name: eks-nvme-ssd-provisioner
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        aws.amazon.com/eks-local-ssd: "true"
      priorityClassName: system-node-critical
      containers:
        - name: eks-nvme-ssd-provisioner
          image: 457591490960.dkr.ecr.ap-east-1.amazonaws.com/nvme_provisioner:1.0.0
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 50Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /pv-disks
              name: pv-disks
              mountPropagation: "Bidirectional"
            - mountPath: /nvme
              name: nvme
              mountPropagation: "Bidirectional"
      volumes:
        - name: pv-disks
          hostPath:
            path: /pv-disks
        - name: nvme
          hostPath:
            path: /nvme
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-storage-provisioner-pv-binding
subjects:
  - kind: ServiceAccount
    name: local-storage-admin
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:persistent-volume-provisioner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-storage-provisioner-node-clusterrole
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-storage-provisioner-node-binding
subjects:
  - kind: ServiceAccount
    name: local-storage-admin
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: local-storage-provisioner-node-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-storage-admin
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-provisioner-config
  namespace: kube-system
data:
  setPVOwnerRef: "true"
  useNodeNameOnly: "true"
  storageClassMap: |
    local-storage:
       hostDir: /pv-disks
       mountDir: /pv-disks
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-volume-provisioner
  namespace: kube-system
  labels:
    app: local-volume-provisioner
spec:
  selector:
    matchLabels:
      app: local-volume-provisioner
  template:
    metadata:
      labels:
        app: local-volume-provisioner
    spec:
      serviceAccountName: local-storage-admin
      nodeSelector:
        aws.amazon.com/eks-local-ssd: "true"
      containers:
        - image: "quay.io/external_storage/local-volume-provisioner:canary_linux_amd64"
          name: provisioner
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 50Mi
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JOB_CONTAINER_IMAGE
              value: "quay.io/external_storage/local-volume-provisioner:canary"
          volumeMounts:
            - mountPath: /etc/provisioner/config
              name: provisioner-config
              readOnly: true
            - mountPath: /dev
              name: provisioner-dev
            - mountPath: /pv-disks
              name: local-storage
              mountPropagation: "HostToContainer"
      volumes:
        - name: provisioner-config
          configMap:
            name: local-provisioner-config
        - name: provisioner-dev
          hostPath:
            path: /dev
        - name: local-storage
          hostPath:
            path: /pv-disks